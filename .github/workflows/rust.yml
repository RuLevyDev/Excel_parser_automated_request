name: Rust CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: ${{ matrix.rust }}
        override: true

    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run Rustfmt
      run: cargo fmt -- --check

    - name: Build
      run: cargo build --verbose

    - name: Build in release mode
      run: cargo build --release

    - name: Run tests
      run: cargo test --verbose

    - name: Build documentation
      run: cargo doc --no-deps --document-private-items

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: binary
        path: target/release/your-binary
