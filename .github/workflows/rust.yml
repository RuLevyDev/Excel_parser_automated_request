name: Rust CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Clean up preinstalled tools
      run: |
        rm -f ~/.cargo/bin/rust-analyzer
        rm -f ~/.cargo/bin/rustfmt
        rm -f ~/.cargo/bin/cargo-fmt

    - name: Cache Cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache Cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-index-

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: clippy, rustfmt

    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run Rustfmt
      run: cargo fmt -- --check

    - name: Build in release mode
      run: cargo build --release

    - name: List contents of target/release
      run: ls -l target/release/

    - name: Run tests
      run: cargo test --verbose

    - name: Upload binary artifact
      uses: actions/upload-artifact@v3
      with:
        name: excel_parser_binary
        path: target/release/excel_parser
